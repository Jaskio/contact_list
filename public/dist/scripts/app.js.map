{"version":3,"sources":["main.module.js","controllers/contact.controller.js","filters/search.filter.js","services/contact.service.js"],"names":["config","$routeProvider","$locationProvider","hashPrefix","when","templateUrl","controller","controllerAs","test","runFn","$location","$rootScope","$on","event","next","current","angular","module","run","$inject","ContactsController","ContactsService","$route","_getContacts","id","getContacts","then","response","vm","form_data","contacts","err","console","log","_addContact","addContact","_updateContact","updateContact","_deleteContact","deleteContact","this","URL_ID","params","searchTerm","search","term","filtered_contacts","forEach","contact","first_name","toLowerCase","startsWith","last_name","email","push","phone","number","filter","$q","$http","defer","provided_id","get","ENDPOINT_PATH","resolve","data","reject","promise","post","put","delete","service"],"mappings":"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","file":"app.js","sourcesContent":["(function() {\r\n    \"use strict\";\r\n\r\n    angular\r\n        .module('phonebook', [\r\n            'ngRoute'\r\n        ]);\r\n\r\n    angular\r\n        .module('phonebook')\r\n        .config(config)\r\n        .run(runFn);\r\n\r\n        config.$inject = [\r\n            '$routeProvider', \r\n            '$locationProvider'\r\n        ];\r\n\r\n        function config($routeProvider, $locationProvider){\r\n\r\n            $locationProvider.hashPrefix('');\r\n\r\n            $routeProvider\r\n                .when('/', {\r\n                    templateUrl: 'dist/views/contacts.html',\r\n                    controller: 'ContactsController',\r\n                    controllerAs: 'CC'\r\n                })\r\n                .when('/contact/add', {\r\n                    templateUrl: 'dist/views/add_contact.html',\r\n                    controller: 'ContactsController',\r\n                    controllerAs: 'CC'\r\n                })\r\n                .when('/contact/:id/edit', {\r\n                    templateUrl: 'dist/views/edit_contact.html',\r\n                    controller: 'ContactsController',\r\n                    controllerAs: 'CC'\r\n                })\r\n                .when('/contact/:id/delete', {\r\n                    templateUrl: 'dist/views/delete_contact.html',\r\n                    controller: 'ContactsController',\r\n                    controllerAs: 'CC',\r\n                    test: 'test'\r\n                })\r\n        };\r\n\r\n        runFn.$inject = [\r\n            '$location',\r\n            '$rootScope'\r\n        ];\r\n\r\n        function runFn($location, $rootScope) {\r\n            $rootScope.$on('$routeChangeStart', function(event, next, current) {\r\n\r\n            });\r\n        };\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('phonebook')\r\n        .controller('ContactsController', ContactsController);\r\n\r\n        ContactsController.$inject = [\r\n            'ContactsService',\r\n            '$route'\r\n        ];\r\n\r\n        function ContactsController(ContactsService, $route) {\r\n            var vm = this;\r\n            var URL_ID = $route.current.params.id;\r\n    \r\n            vm.contacts = [];\r\n            vm.form_data = {};\r\n            vm.searchTerm = '';\r\n\r\n            _init();\r\n\r\n            function _init() {\r\n                _getContacts(URL_ID);\r\n\r\n                vm.addContact = _addContact;\r\n                vm.updateContact = _updateContact;\r\n                vm.deleteContact = _deleteContact;\r\n            }\r\n\r\n            function _getContacts(id) {\r\n                ContactsService.getContacts(id)\r\n                    .then(function(response) {\r\n                        if (id) {\r\n                            vm.form_data = response;\r\n                        } else {\r\n                            vm.contacts = response;\r\n                        }\r\n                    }, function(err) {\r\n                        console.log(err);\r\n                    });\r\n            }\r\n\r\n            function _addContact() {\r\n                ContactsService.addContact(vm.form_data)\r\n                    .then(function(response) {\r\n                        console.log(response);\r\n                    }, function(err) {\r\n                        console.log(err);\r\n                    });\r\n            }\r\n\r\n            function _updateContact() {\r\n                ContactsService.updateContact(vm.form_data)\r\n                    .then(function(response) {\r\n                        console.log(response);\r\n                    }, function(err) {\r\n                        console.log(err);\r\n                    });\r\n            }\r\n\r\n            function _deleteContact() {\r\n                ContactsService.deleteContact(vm.form_data.id)\r\n                    .then(function(response) {\r\n                        console.log(response);\r\n                    }, function(err) {\r\n                        console.log(err);\r\n                    });\r\n            }\r\n        };\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('phonebook')\r\n        .filter('search', search);\r\n\r\n        function search() {\r\n            return function(contacts, term) {\r\n                var filtered_contacts = [];\r\n\r\n                contacts.forEach(function(contact) {\r\n                    if (contact.first_name.toLowerCase().startsWith(term.toLowerCase()) ||\r\n                        contact.last_name.toLowerCase().startsWith(term.toLowerCase()) ||\r\n                        contact.email.toLowerCase().startsWith(term.toLowerCase())) {\r\n\r\n                        filtered_contacts.push(contact);\r\n                    } else {\r\n                        contact.phone.forEach(function(phone) {\r\n                            if (phone.number.toLowerCase().startsWith(term.toLowerCase())) {\r\n                                filtered_contacts.push(contact);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return filtered_contacts;\r\n            }\r\n        }\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('phonebook')\r\n        .service('ContactsService', ContactsService);\r\n\r\n        ContactsService.$inject = ['$q', '$http'];\r\n\r\n        function ContactsService($q, $http) {\r\n            var service = {};\r\n            var ENDPOINT_PATH = 'http://localhost:3000/contacts/';\r\n\r\n            _init();\r\n\r\n            function _init() {\r\n                service.getContacts = _getContacts;\r\n                service.addContact = _addContact;\r\n                service.updateContact = _updateContact;\r\n                service.deleteContact = _deleteContact;\r\n            }\r\n\r\n            \r\n            function _getContacts(id) {\r\n                var defer = $q.defer();\r\n                var provided_id = id || '';\r\n\r\n                $http.get(ENDPOINT_PATH + provided_id)\r\n                    .then(function(response) {\r\n                        defer.resolve(response.data);\r\n                    }, function(err) {\r\n                        defer.reject(err.data);\r\n                    });\r\n\r\n                return defer.promise;\r\n            }\r\n\r\n            function _addContact(data) {\r\n                var defer = $q.defer();\r\n\r\n                $http.post(ENDPOINT_PATH, data)\r\n                    .then(function(response) {\r\n                        defer.resolve(response.data);\r\n                    }, function(err) {\r\n                        defer.reject(err.data);\r\n                    });\r\n\r\n                return defer.promise;\r\n            }\r\n\r\n            function _updateContact(data) {\r\n                var defer = $q.defer();\r\n\r\n                $http.put(ENDPOINT_PATH + data.id, data)\r\n                    .then(function(response) {\r\n                        defer.resolve(response.data);\r\n                    }, function(err) {\r\n                        defer.reject(err.data);\r\n                    });\r\n\r\n                return defer.promise;\r\n            }\r\n\r\n            function _deleteContact(id) {\r\n                var defer = $q.defer();\r\n\r\n                $http.delete(ENDPOINT_PATH + id)\r\n                    .then(function(response) {\r\n                        defer.resolve(response.data);\r\n                    }, function(err) {\r\n                        defer.reject(err.data);\r\n                    });\r\n\r\n                return defer.promise;\r\n            }\r\n\r\n            return service;\r\n        };\r\n})();\r\n"]}